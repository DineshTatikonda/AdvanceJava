/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-09-29 03:58:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editemp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
   String status = (String)request.getAttribute("status");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Add Employee</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Basic reset */\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Body styling with dark background */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Helvetica Neue', Arial, sans-serif;\r\n");
      out.write("            background-color: #1a1a1a; /* Dark grey background */\r\n");
      out.write("            color: #f4f4f4; /* Light text */\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Form container with black background and grey borders */\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            background-color: #2c2c2c; /* Black */\r\n");
      out.write("            padding: 25px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            border: 1px solid #3d3d3d; /* Dark grey border */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Form header styling */\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            color: #d1d1d1; /* Light grey for the heading */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Label styling */\r\n");
      out.write("        label {\r\n");
      out.write("            margin: 10px 0 5px;\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #c2c2c2; /* Light grey for labels */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Input fields styling */\r\n");
      out.write("        input[type=\"text\"], input[type=\"email\"], select, textarea {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            border: 1px solid #444444; /* Dark grey borders for input */\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            background-color: #333333; /* Slightly lighter black */\r\n");
      out.write("            color: #ffffff; /* White text inside input */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Styling for the submit button */\r\n");
      out.write("        input[type=\"submit\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            background-color: #4CAF50; /* Bright green for submit button */\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hover effect for the submit button */\r\n");
      out.write("        input[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Responsive styling */\r\n");
      out.write("        @media (max-width: 600px) {\r\n");
      out.write("            .container {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                padding: 20px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input[type=\"submit\"] {\r\n");
      out.write("                font-size: 14px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            input[type=\"text\"], input[type=\"email\"], select, textarea {\r\n");
      out.write("                font-size: 14px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Success message styling */\r\n");
      out.write("        .success {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            color: #4CAF50;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<center>\r\n");
      out.write("		\r\n");
      out.write("		<h1>Welcome to Employee Management System</h1>\r\n");
      out.write("		\r\n");
      out.write("		<h3><a href = \"addemp.jsp\">Add Employee</a></h3>\r\n");
      out.write("		<h3><a href = \"viewemp\">View all Employees</a></h3>\r\n");
      out.write("		<h3><a href = \"searchemp.jsp\">Search Employee</a></h3>\r\n");
      out.write("	</center>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>Add New Employee</h2>\r\n");
      out.write("        <!-- Employee form -->\r\n");
      out.write("        <form action=\"edituser\">\r\n");
      out.write("            <!-- Name Field -->\r\n");
      out.write("            ");
 if(status != null) {
      out.write("\r\n");
      out.write("            	<h1>");
      out.print( status );
      out.write("</h1>\r\n");
      out.write("            \r\n");
      out.write("            ");
} 
      out.write("\r\n");
      out.write("            <label for=\"id\">Name</label>\r\n");
      out.write("            <input type=\"text\" id=\"name\" name=\"id\" value='");
      out.print( request.getParameter("id") );
      out.write("' placeholder=\"Enter full name\" required>\r\n");
      out.write("            \r\n");
      out.write("            <label for=\"name\">Name</label>\r\n");
      out.write("            <input type=\"text\" id=\"name\" name=\"name\" value='");
      out.print( request.getParameter("name") );
      out.write("' placeholder=\"Enter full name\" required>\r\n");
      out.write("\r\n");
      out.write("            <!-- Email Field -->\r\n");
      out.write("            <label for=\"email\">Email</label>\r\n");
      out.write("            <input type=\"email\" id=\"email\" name=\"email\" value='");
      out.print( request.getParameter("email") );
      out.write("'placeholder=\"Enter email address\" required>\r\n");
      out.write("\r\n");
      out.write("            <!-- Gender Selection -->\r\n");
      out.write("            <label for=\"gender\">Gender</label>\r\n");
      out.write("            <select id=\"gender\" name=\"gender\" required>\r\n");
      out.write("                <option value=\"\" disabled selected>Select Gender</option>\r\n");
      out.write("                <option value=\"Male\">Male</option>\r\n");
      out.write("                <option value=\"Female\">Female</option>\r\n");
      out.write("                <option value=\"Other\">Other</option>\r\n");
      out.write("            </select>\r\n");
      out.write("\r\n");
      out.write("            <!-- Department Field -->\r\n");
      out.write("            <label for=\"dept\">Department</label>\r\n");
      out.write("            <input type=\"text\" id=\"dept\" name=\"dept\" placeholder=\"Enter department\" required>\r\n");
      out.write("\r\n");
      out.write("            <!-- Salary Field -->\r\n");
      out.write("            <label for=\"salary\">Salary</label>\r\n");
      out.write("            <input type=\"text\" id=\"salary\" name=\"salary\" placeholder=\"Enter salary\" value='");
      out.print( request.getParameter("salary") );
      out.write("'pattern=\"[0-9]+\" title=\"Salary should be a valid number\" required>\r\n");
      out.write("\r\n");
      out.write("            <!-- Mobile Number Field -->\r\n");
      out.write("            <label for=\"mobile\">Mobile</label>\r\n");
      out.write("            <input type=\"text\" id=\"mobile\" name=\"mobile\" value='");
      out.print( request.getParameter("mobile") );
      out.write("' placeholder=\"Enter mobile number\" maxlength=\"10\" pattern=\"[0-9]{10}\" title=\"Mobile number should be 10 digits\" required>\r\n");
      out.write("\r\n");
      out.write("            <!-- Address Field -->\r\n");
      out.write("            <label for=\"addr\">Address</label>\r\n");
      out.write("            <textarea id=\"addr\" name=\"addr\" rows=\"4\" placeholder=\"Enter full address\" required>");
      out.print( request.getParameter("addr") );
      out.write("</textarea>\r\n");
      out.write("\r\n");
      out.write("            <!-- Submit Button -->\r\n");
      out.write("            <input type=\"submit\" value=\"Update Employee\">\r\n");
      out.write("        </form>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Success Message -->\r\n");
      out.write("        <div class=\"success\" id=\"successMessage\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
